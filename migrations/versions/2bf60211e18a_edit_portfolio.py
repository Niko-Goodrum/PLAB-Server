"""edit portfolio

Revision ID: 2bf60211e18a
Revises: b540ab7d0fd3
Create Date: 2025-06-25 11:34:40.421334

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '2bf60211e18a'
down_revision: Union[str, None] = 'b540ab7d0fd3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('careers',
    sa.Column('company_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('part', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('position', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('join_date', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('resign_date', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('task', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('techs', postgresql.ARRAY(sa.VARCHAR()), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('portfolio_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolio.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_careers_id'), 'careers', ['id'], unique=False)
    op.create_table('educations',
    sa.Column('school_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('level', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('join_date', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('resign_date', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('major', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('portfolio_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolio.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_educations_id'), 'educations', ['id'], unique=False)
    op.create_table('projects',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('part', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('start_date', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('end_date', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('task', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('images', postgresql.ARRAY(sa.VARCHAR()), nullable=True),
    sa.Column('techs', postgresql.ARRAY(sa.VARCHAR()), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('portfolio_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolio.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_projects_id'), 'projects', ['id'], unique=False)
    op.create_table('grades',
    sa.Column('received_grade', sa.Float(), nullable=False),
    sa.Column('max_grade', sa.Float(), nullable=False),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('education_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['education_id'], ['educations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_grades_id'), 'grades', ['id'], unique=False)
    op.create_table('project_urls',
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('link', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('project_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_project_urls_id'), 'project_urls', ['id'], unique=False)
    op.drop_column('portfolio', 'careers')
    op.drop_column('portfolio', 'educations')
    op.drop_column('portfolio', 'projects')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('portfolio', sa.Column('projects', postgresql.ARRAY(postgresql.JSONB(astext_type=sa.Text())), autoincrement=False, nullable=True))
    op.add_column('portfolio', sa.Column('educations', postgresql.ARRAY(postgresql.JSONB(astext_type=sa.Text())), autoincrement=False, nullable=True))
    op.add_column('portfolio', sa.Column('careers', postgresql.ARRAY(postgresql.JSONB(astext_type=sa.Text())), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_project_urls_id'), table_name='project_urls')
    op.drop_table('project_urls')
    op.drop_index(op.f('ix_grades_id'), table_name='grades')
    op.drop_table('grades')
    op.drop_index(op.f('ix_projects_id'), table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_educations_id'), table_name='educations')
    op.drop_table('educations')
    op.drop_index(op.f('ix_careers_id'), table_name='careers')
    op.drop_table('careers')
    # ### end Alembic commands ###
